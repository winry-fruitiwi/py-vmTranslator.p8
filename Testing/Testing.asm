// neg
@SP
A=M-1
M=-M

// not
@SP
A=M-1
M=!M

// and
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=D&M
@SP
M=M-1

// or
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=D|M
@SP
M=M-1

// add
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=D+M
@SP
M=M-1

// sub
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1

// eq
@SP
AM=M-1
D=M
@SP
A=M-1
D=M-D
@JUMP0.TRUE
D;JEQ
@JUMP0.FALSE
0;JMP
(JUMP0.TRUE)
@SP
A=M-1
M=-1
@EN0D
0;JMP
(JUMP0.FALSE)
@SP
A=M-1
M=0
(EN0D)

// lt
@SP
AM=M-1
D=M
@SP
A=M-1
D=M-D
@JUMP1.TRUE
D;JLT
@JUMP1.FALSE
0;JMP
(JUMP1.TRUE)
@SP
A=M-1
M=-1
@EN1D
0;JMP
(JUMP1.FALSE)
@SP
A=M-1
M=0
(EN1D)


// gt
@SP
AM=M-1
D=M
@SP
A=M-1
D=M-D
@JUMP2.TRUE
D;JGT
@JUMP2.FALSE
0;JMP
(JUMP2.TRUE)
@SP
A=M-1
M=-1
@EN2D
0;JMP
(JUMP2.FALSE)
@SP
A=M-1
M=0
(EN2D)


